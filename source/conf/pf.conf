#	$OpenBSD: pf.conf,v 1.27 2004/03/02 20:13:55 cedric Exp $
#
# See pf.conf(5) and /usr/share/pf for syntax and examples.

# author: Caleb Phillips
# version: 2004.07.08
# apology: This is my first pf ruleset

#################################################################
# macro definitions

# interfaces
wiface = "wi0"
wiaddr = "192.168.3.1"
lanface = "sis0"
loopface = "lo0"

# these are ports allowed to go out lanside
outtcp = "{ 21,22,23,25,43,53,80,110,123,143,194,443,993,5190,1863,5050,6667 }"
outudp = "{ 53,123,67 }"

# allowed to come in wireless side
intcp = "{ 21,22,23,25,53,80,110,123,143,194,443,993,5190,1863,5050,6667 }"
inudp = "{ 53,123 }"

# freebies - ports that will relay for anyone in the wlan
freebietcp = "{ 53 }"
freebieudp = "{ 53 }"

# allowed to come in wireless side TO US
inlocaltcp = "{ 22,80,8080 }"

# allowed wireless clients
#wiallow = "{ 192.168.3.1 }" 
table <wiallow> {}

#################################################################
# options: "set"

# keep stats on the wireless side
set loginterface $wiface

set limit { states 10000, frags 10000 }

#################################################################
# scrub rules: "scrub"

# scrub dirty packets coming from the wireless side
#scrub in on $wiface all
match in on $wiface all scrub (no-df)


#################################################################
# NAT rules: "rdr", "nat", "binat"

# nat everything on the wireless side with the ip we get
# from dhcp on the wired side
#nat on $lanface from 192.168.3.0/24 to any -> ($lanface) 
match out on $lanface from 192.168.3.0/24 to any nat-to ($lanface)


# redirect un allowed wiclients to our http server
# thanks wicap :)
#no rdr on $wiface proto tcp from <wiallow> to any port 80 
#rdr on $wiface proto tcp from any to any port 80 -> $wiaddr port 8080
#match in on $wiface proto tcp from any to any port 80 rdr-to $wiaddr port 8080
pass in on $wiface inet proto tcp from any to any port 80 rdr-to $wiaddr port 8080


#################################################################
# filtering rules: "antispoof", "block", "pass"

# NOTE: filtering works like this: niether interface is
# really trusted, so we are a little paranoid. We allow
# only ssh wired->me; just like a NAT should be, the
# side that is natted is more better firewalled. We allow
# a limited set of ports wireless->elsewhere and only
# ssh wireless->me.

# start with a bang 
block in log all
block out log all

# loopback wide-open
pass in quick on $loopface all
pass out quick on $loopface all

# allow some things in to elsewhere on the wireless side

# freebies
pass in quick on $wiface inet proto tcp from any to any port $freebietcp flags S/SA modulate state
pass in quick on $wiface inet proto udp from any to any port $freebieudp keep state  

# only for authed clients
pass in quick on $wiface inet proto tcp from <wiallow> to ! $wiaddr port $intcp flags S/SA modulate state
pass in quick on $wiface inet proto udp from <wiallow> to ! $wiaddr port $inudp keep state

# allow in some things to here on the wireless side
pass in quick on $wiface inet proto tcp from any to $wiaddr port $inlocaltcp flags S/SA modulate state

# any traffic to wireless LAN ok
pass out quick on $wiface all

# allow nat-ed clients limited access to IntarWeb
pass out quick on $lanface inet proto tcp from any to any port $outtcp flags S/SA modulate state
pass out quick on $lanface inet proto udp from any to any port $outudp keep state

# ping the IntarWeb
pass out quick on $lanface inet proto icmp all icmp-type 8 code 0 keep state
pass in quick on $wiface inet proto icmp all icmp-type 8 code 0 keep state

# allow ssh lanside
pass in on $lanface inet proto tcp from any to ($lanface) \
	port $inlocaltcp flags S/SA keep state 
